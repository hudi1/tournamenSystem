package org.toursys.repository.model {

  final enum GroupsType serializable 1  {
    value : java.lang.String
    BASIC ::: "B"
    FINAL ::: "F"
    PLAY_OFF ::: "P"
  }

  final enum PlayOffGameWinner serializable 1  {
    value : java.lang.String
    HOME ::: "HOME"
    AWAY ::: "AWAY"
  }

  final enum UserRole serializable 1  {
    value : java.lang.String
    ADMIN ::: "ADMIN"
    USER ::: "USER"
  }

  final pojo FinalStanding serializable 1 {
    id : java.lang.Integer primaryKey index 1
    player :: Player index 4
    finalRank : java.lang.Integer required
    tournament :: Tournament required index 3
    equals ::: id
    toInit ::: tournament player
    toString ::: id finalRank
  }

  final pojo Game serializable 1 {
    id : java.lang.Integer primaryKey index 1
    homeParticipant :: Participant required index 2
    awayParticipant :: Participant required index 3
    homeScore : java.lang.Integer
    awayScore : java.lang.Integer
    equals ::: id
    toInit ::: homeParticipant awayParticipant
    toString ::: id homeScore awayScore
  }

  final pojo Groups serializable 1 {
    id : java.lang.Integer primaryKey index 1
    name : java.lang.String required
    numberOfHockey : java.lang.Integer required
    type :: GroupsType required
    indexOfFirstHockey : java.lang.Integer required
    tournament :: Tournament required index 3
    copyResult : java.lang.Boolean required
    playThirdPlace : java.lang.Boolean required
    participants : java.util.List <:Participant>
    playOffGames : java.util.List <:PlayOffGame>
    equals ::: id
    toInit ::: playOffGames tournament participants
    toString ::: id playThirdPlace indexOfFirstHockey copyResult name numberOfHockey type
  }

  final pojo Participant serializable 1 {
    id : java.lang.Integer primaryKey index 1
    points : java.lang.Integer required
    rank : java.lang.Integer
    group :: Groups required index 3
    player :: Player required index 2
    score : org.toursys.repository.model.Score required
    equalRank : java.lang.Integer
    temp _boolean
    homeParticipantIdPlayOffGames : java.util.List <:PlayOffGame>
    games : java.util.List <:Game>
    awayParticipantIdPlayOffGames : java.util.List <:PlayOffGame>
    equals ::: id
    toInit ::: awayParticipantIdPlayOffGames games player group homeParticipantIdPlayOffGames
    toString ::: id rank score temp equalRank points
  }

  final pojo Player serializable 1 {
    id : java.lang.Integer primaryKey index 1
    name : java.lang.String required
    surname : java.lang.String required
    club : java.lang.String
    playerDiscriminator : java.lang.String
    worldRanking : java.lang.Integer
    user :: User required index 3
    equals ::: id
    toInit ::: user
    toString ::: playerDiscriminator id club name surname worldRanking
  }

  final pojo PlayOffGame serializable 1 {
    id : java.lang.Integer primaryKey index 1
    homeParticipant :: Participant index 4
    awayParticipant :: Participant index 3
    group :: Groups required index 2
    position : java.lang.Integer required
    results : java.lang.String
    winner :: PlayOffGameWinner
    equals ::: id
    toInit ::: homeParticipant awayParticipant group
    toString ::: position id results winner
  }

  final pojo Season serializable 1 {
    id : java.lang.Integer primaryKey index 1
    name : java.lang.String required
    user :: User required index 2
    tournaments : java.util.List <:Tournament>
    equals ::: id
    toInit ::: tournaments user
    toString ::: id name
  }

  final pojo Tournament serializable 1 {
    id : java.lang.Integer primaryKey index 1
    name : java.lang.String required
    season :: Season required index 2
    finalPromoting : java.lang.Integer required
    lowerPromoting : java.lang.Integer required
    winPoints : java.lang.Integer required
    playOffA : java.lang.Integer required
    playOffLower : java.lang.Integer required
    minPlayersInGroup : java.lang.Integer required
    groups : java.util.List <:Groups>
    finalStandings : java.util.List <:FinalStanding>
    equals ::: id
    toInit ::: season finalStandings groups
    toString ::: id playOffLower playOffA winPoints finalPromoting name lowerPromoting minPlayersInGroup
  }

  final pojo User serializable 1 {
    id : java.lang.Integer primaryKey index 1
    name : java.lang.String
    surname : java.lang.String
    email : java.lang.String required index 3
    userName : java.lang.String required index 2
    password : java.lang.String required
    role :: UserRole
    platnost : java.lang.Integer required
    players : java.util.List <:Player>
    seasons : java.util.List <:Season>
    equals ::: id
    toInit ::: seasons players
    toString ::: id email name platnost role userName surname password
  }
  
}