package org.toursys.repository.model { 

  final enum GameStatus serializable 1  {
    value : java.lang.String
    WIN ::: "WIN"
    LOSE ::: "LOSE"
    DRAW ::: "DRAW"
  }

  final enum GroupsPlayOffType serializable 1  {
    value : java.lang.String
    FINAL ::: "F"
    LOWER ::: "L"
    CROSS ::: "C"
  }

  final enum GroupsType serializable 1  {
    value : java.lang.String
    BASIC ::: "B"
    FINAL ::: "F"
    PLAY_OFF ::: "P"
  }

  final enum TournamentSortType serializable 1  {
    value : java.lang.String
    SK ::: "SK"
    CZ ::: "CZ"
  }

  final enum UserRole serializable 1  {
    value : java.lang.String
    ADMIN ::: "ADMIN"
    USER ::: "USER"
  }

  final pojo FinalStanding serializable 1 {
    id : java.lang.Integer primaryKey index 1
    player :: Player index 4
    finalRank : java.lang.Integer required index 5
    tournament :: Tournament required index 3
    equals ::: id
    toInit ::: tournament player
    isDef ::: player
    toString ::: id finalRank
  }

  final pojo Game serializable 1 {
    id : java.lang.Integer primaryKey index 1
    homeParticipant :: Participant index 2
    awayParticipant :: Participant index 3
    status :: GameStatus
    result : org.toursys.repository.model.Results
    equals ::: id
    toInit ::: homeParticipant awayParticipant
    isDef ::: result status homeParticipant awayParticipant
    toString ::: id result status
  }

  final pojo Groups serializable 1 {
    id : java.lang.Integer primaryKey index 1
    name : java.lang.String required index 4
    numberOfHockey : java.lang.Integer required
    type :: GroupsType required
    indexOfFirstHockey : java.lang.Integer required
    tournament :: Tournament required index 3
    copyResult : java.lang.Boolean required
    playThirdPlace : java.lang.Boolean required
    playOff : java.lang.Boolean required
    playOffType :: GroupsPlayOffType required
    participants : java.util.List <:Participant>
    playOffGames : java.util.List <:PlayOffGame>
    equals ::: id
    toInit ::: playOffGames tournament participants
    isDef :::
    toString ::: id playThirdPlace indexOfFirstHockey copyResult name numberOfHockey type playOffType playOff
  }

  final pojo Participant serializable 1 {
    id : java.lang.Integer primaryKey index 1
    points : java.lang.Integer required
    rank : java.lang.Integer index 4
    group :: Groups required index 3
    player :: Player required index 2
    score : org.toursys.repository.model.Score required
    equalRank : java.lang.Integer
    temp _boolean
    games : java.util.List <:Game>
    equals ::: id
    toInit ::: games player group
    isDef ::: rank temp equalRank
    toString ::: id rank score temp equalRank points
  }

  final pojo Player serializable 1 {
    id : java.lang.Integer primaryKey index 1
    name : java.lang.String required
    surname : java.lang.String required
    club : java.lang.String
    playerDiscriminator : java.lang.String required
    worldRanking : java.lang.Integer
    user :: User required index 3
    ithfId : java.lang.Integer
    participants : java.util.List <:Participant>
    equals ::: id
    toInit ::: participants user
    isDef ::: ithfId club worldRanking
    toString ::: ithfId playerDiscriminator id club name surname worldRanking
  }

  final pojo PlayOffGame extends Game serializable 1 {
    group :: Groups required index 2
    position : java.lang.Integer required index 3
    toInit ::: homeParticipant awayParticipant group
    isDef ::: result status homeParticipant awayParticipant
    toString ::: position
  }

  final pojo Season serializable 1 {
    id : java.lang.Integer primaryKey index 1
    name : java.lang.String required
    user :: User required index 2
    tournaments : java.util.List <:Tournament>
    equals ::: id
    toInit ::: tournaments user
    isDef :::
    toString ::: id name
  }

  final pojo Tournament serializable 1 {
    id : java.lang.Integer primaryKey index 1
    name : java.lang.String required
    season :: Season required index 2
    finalPromoting : java.lang.Integer required
    lowerPromoting : java.lang.Integer required
    winPoints : java.lang.Integer required
    playOffFinal : java.lang.Integer required
    playOffLower : java.lang.Integer required
    minPlayersInGroup : java.lang.Integer required
    sortType :: TournamentSortType required
    publish : java.lang.Boolean required
    groups : java.util.List <:Groups>
    finalStandings : java.util.List <:FinalStanding>
    equals ::: id
    toInit ::: season finalStandings groups
    isDef :::
    toString ::: id playOffLower winPoints finalPromoting name sortType lowerPromoting minPlayersInGroup publish playOffFinal
  }

  final pojo User serializable 1 {
    id : java.lang.Integer primaryKey index 1
    name : java.lang.String
    surname : java.lang.String
    email : java.lang.String required index 3
    userName : java.lang.String required index 2
    password : java.lang.String required
    role :: UserRole required
    platnost : java.lang.Integer required
    players : java.util.List <:Player>
    seasons : java.util.List <:Season>
    equals ::: id
    toInit ::: seasons players
    isDef ::: name surname
    toString ::: id email name platnost role userName surname password
  }
  
  final pojo WchQualification serializable 1 {
    id : java.lang.Integer primaryKey index 1
    ithfId : java.lang.Integer required index 2
    lastUpdate : java.util.Date required
    name : java.lang.String required
    wchTournaments : java.util.List <:WchTournament>
    equals ::: id
    toInit ::: wchTournaments
    isDef :::
    toString ::: ithfId id lastUpdate name
  }

  final pojo WchTournament serializable 1 {
    id : java.lang.Integer primaryKey index 1
    wchQualification :: WchQualification required index 2
    name : java.lang.String
    series : java.lang.String
    date : java.util.Date required
    points : java.lang.Integer
    equals ::: id
    toInit ::: wchQualification
    isDef ::: series name points
    toString ::: id series name points date
  }

}